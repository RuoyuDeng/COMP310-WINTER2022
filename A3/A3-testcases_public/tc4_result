Frame Store Size = 18; Variable Store Size = 10
P10L1
PTenLineTwoSet
P11L1
PEightLineTwoSet
P12L1
P12L2
P10L3
PTenLineTwoSet
P11L3
PEightLineTwoSet
P12L3
P12L4
P10L5
PTenLineSixSet
P11L5
P11L6
P12L5
P12L6
Page fault! Victim page contents:
echo P10L1
set a PTenLineTwoSet; print a
echo P10L3
End of victim page contents.
Page fault! Victim page contents:
echo P11L1
set w PEightLineTwoSet; print w
echo P11L3
End of victim page contents.
Page fault! Victim page contents:
echo P12L1
echo P12L2
echo P12L3
End of victim page contents.
P10L7
P11L7
P11L8
P12L7
P12L8
P11L9
Page fault! Victim page contents:
echo $a
echo P10L5
set a PTenLineSixSet; echo $a
End of victim page contents.
P12L9
Page fault! Victim page contents:
echo $w
echo P11L5
echo P11L6
End of victim page contents.
P11L10
P12L10
P12L11
P12L12
Page fault! Victim page contents:
echo P12L4
echo P12L5
echo P12L6
End of victim page contents.
P12L13



0
echo P10L1
set a PTenLineTwoSet; print a
echo P10L3

1
echo $a
echo P10L5
set a PTenLineSixSet; echo $a

2
echo P11L7
echo P11L8
echo P11L9

3
echo $w
echo P11L5
echo P11L6
[2, 3] 0>1
[-1, -2]
4
echo P12L7
echo P12L8
echo P12L9

5
echo P12L4
echo P12L5
echo P12L6

10 11 12 PF 
(frame_index = 0 -> first page in page table, page_table[0] = 0)
(line_index = 6)
11 12 10 PF

12 10 11 PF

10 11 12

11 [2,3,-1, -1, -1, -1, -1, -1, -1]
unrun_page_table[]
2 (last unrun frame)
3 ()

p:  [2,3,-1, -1, -1, -1, -1, -1, -1]
p[0] -> frame[2] ->p[1]

p'[1] == -2 is_last_frame = 1

p': [-2,-2,-1, -1, -1, -1, -1, -1, -1]